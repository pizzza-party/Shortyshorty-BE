version: '3.8'

services:
  mysql:
    container_name: mysql
    build:
      context: mysql
      dockerfile: Dockerfile
    ports:
      - '3306:3306'
    env_file:
      - .env.dev
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD',
        ]
      timeout: 20s
      retries: 10
    networks:
      - network
  app:
    container_name: app
    build:
      context: ./
      dockerfile: src/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - ./src:/usr/app/src
      - /usr/app/node_modules
    env_file:
      - .env.dev
    command: npm run dev
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - network
  # nginx:
  #   container_name: nginx
  #   restart: on-failure
  #   build:
  #     context: nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - '80:80'
  #   depends_on:
  #     - app
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf

networks:
  network:
    driver: bridge
